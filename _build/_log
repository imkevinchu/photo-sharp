### Starting build.
# Target: microc.ml.depends, tags: { package(llvm), package(llvm.analysis), warn(+a-4), extension:ml, file:microc.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package llvm -package llvm.analysis -modules microc.ml > microc.ml.depends
# Target: ast.ml.depends, tags: { package(llvm), package(llvm.analysis), warn(+a-4), extension:ml, file:ast.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package llvm -package llvm.analysis -modules ast.ml > ast.ml.depends
# Target: codegen.ml.depends, tags: { package(llvm), package(llvm.analysis), warn(+a-4), extension:ml, file:codegen.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package llvm -package llvm.analysis -modules codegen.ml > codegen.ml.depends
# Target: ast.cmo, tags: { package(llvm), package(llvm.analysis), warn(+a-4), byte, compile, extension:cmo, extension:ml, file:ast.cmo, file:ast.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -w +a-4 -package llvm -package llvm.analysis -o ast.cmo ast.ml
+ ocamlfind ocamlc -c -w +a-4 -package llvm -package llvm.analysis -o ast.cmo ast.ml
File "ast.ml", line 91, characters 25-649:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(EFor (_, _, _)|EEFor (_, _, _, _))
# Target: sast.ml.depends, tags: { package(llvm), package(llvm.analysis), warn(+a-4), extension:ml, file:sast.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package llvm -package llvm.analysis -modules sast.ml > sast.ml.depends
# Target: sast.cmo, tags: { package(llvm), package(llvm.analysis), warn(+a-4), byte, compile, extension:cmo, extension:ml, file:sast.cmo, file:sast.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -w +a-4 -package llvm -package llvm.analysis -o sast.cmo sast.ml
+ ocamlfind ocamlc -c -w +a-4 -package llvm -package llvm.analysis -o sast.cmo sast.ml
File "sast.ml", line 43, characters 34-523:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SPixelLit (_, _, _, _)|SSetpval (_, _, _))
File "sast.ml", line 59, characters 26-678:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SEFor (_, _, _)|SEEFor (_, _, _, _))
# Target: parser.mly, tags: { package(llvm), package(llvm.analysis), warn(+a-4), extension:mly, file:parser.mly, infer, ocaml, ocamlyacc, parser, quiet, traverse }
/Users/mariematthews/.opam/4.06.1/bin/ocamlyacc parser.mly
+ /Users/mariematthews/.opam/4.06.1/bin/ocamlyacc parser.mly
17 shift/reduce conflicts.
# Target: parser.mli.depends, tags: { package(llvm), package(llvm.analysis), warn(+a-4), extension:mli, file:parser.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package llvm -package llvm.analysis -modules parser.mli > parser.mli.depends
# Target: scanner.mll, tags: { package(llvm), package(llvm.analysis), warn(+a-4), extension:mll, file:scanner.mll, lexer, ocaml, ocamllex, quiet, traverse }
/Users/mariematthews/.opam/4.06.1/bin/ocamllex.opt -q scanner.mll
# Target: scanner.ml.depends, tags: { package(llvm), package(llvm.analysis), warn(+a-4), extension:ml, file:scanner.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package llvm -package llvm.analysis -modules scanner.ml > scanner.ml.depends
# Target: parser.cmi, tags: { package(llvm), package(llvm.analysis), warn(+a-4), byte, compile, extension:mli, file:parser.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -w +a-4 -package llvm -package llvm.analysis -o parser.cmi parser.mli
# Target: semant.ml.depends, tags: { package(llvm), package(llvm.analysis), warn(+a-4), extension:ml, file:semant.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package llvm -package llvm.analysis -modules semant.ml > semant.ml.depends
# Target: codegen.cmo, tags: { package(llvm), package(llvm.analysis), warn(+a-4), byte, compile, extension:cmo, extension:ml, file:codegen.cmo, file:codegen.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -w +a-4 -package llvm -package llvm.analysis -o codegen.cmo codegen.ml
+ ocamlfind ocamlc -c -w +a-4 -package llvm -package llvm.analysis -o codegen.cmo codegen.ml
File "codegen.ml", line 45, characters 21-276:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
Default
File "codegen.ml", line 333, characters 10-660:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(Void|Default|Gradient|Album|Array)
File "codegen.ml", line 277, characters 44-7782:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
SSetpval (_, _, _)
File "codegen.ml", line 482, characters 70-74:
Warning 40: Less was selected from type Ast.op.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 482, characters 70-74:
Warning 42: this use of Less relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 483, characters 95-98:
Warning 40: Add was selected from type Ast.op.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 483, characters 95-98:
Warning 42: this use of Add relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 489, characters 70-74:
Warning 40: Less was selected from type Ast.op.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 489, characters 70-74:
Warning 42: this use of Less relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 490, characters 95-98:
Warning 40: Add was selected from type Ast.op.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 490, characters 95-98:
Warning 42: this use of Add relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 479, characters 16-1194:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(Int|Bool|Float|Void|String|Default|Gradient|Array|Pixel)
File "codegen.ml", line 500, characters 64-68:
Warning 40: Less was selected from type Ast.op.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 500, characters 64-68:
Warning 42: this use of Less relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 501, characters 83-86:
Warning 40: Add was selected from type Ast.op.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 501, characters 83-86:
Warning 42: this use of Add relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 497, characters 16-407:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(Bool|Float|Void|String|Default|Image|Gradient|Album|Array|Pixel)
File "codegen.ml", line 31, characters 6-11:
Warning 26: unused variable i64_t.
# Target: scanner.cmo, tags: { package(llvm), package(llvm.analysis), warn(+a-4), byte, compile, extension:cmo, extension:ml, file:scanner.cmo, file:scanner.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -w +a-4 -package llvm -package llvm.analysis -o scanner.cmo scanner.ml
# Target: semant.cmo, tags: { package(llvm), package(llvm.analysis), warn(+a-4), byte, compile, extension:cmo, extension:ml, file:semant.cmo, file:semant.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -w +a-4 -package llvm -package llvm.analysis -o semant.cmo semant.ml
# Target: microc.cmo, tags: { package(llvm), package(llvm.analysis), warn(+a-4), byte, compile, extension:cmo, extension:ml, file:microc.cmo, file:microc.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -w +a-4 -package llvm -package llvm.analysis -o microc.cmo microc.ml
# Target: ast.cmx, tags: { package(llvm), package(llvm.analysis), warn(+a-4), compile, extension:cmx, extension:ml, file:ast.cmx, file:ast.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -w +a-4 -package llvm -package llvm.analysis -o ast.cmx ast.ml
+ ocamlfind ocamlopt -c -w +a-4 -package llvm -package llvm.analysis -o ast.cmx ast.ml
File "ast.ml", line 91, characters 25-649:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(EFor (_, _, _)|EEFor (_, _, _, _))
# Target: sast.cmx, tags: { package(llvm), package(llvm.analysis), warn(+a-4), compile, extension:cmx, extension:ml, file:sast.cmx, file:sast.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -w +a-4 -package llvm -package llvm.analysis -o sast.cmx sast.ml
+ ocamlfind ocamlopt -c -w +a-4 -package llvm -package llvm.analysis -o sast.cmx sast.ml
File "sast.ml", line 43, characters 34-523:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SPixelLit (_, _, _, _)|SSetpval (_, _, _))
File "sast.ml", line 59, characters 26-678:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SEFor (_, _, _)|SEEFor (_, _, _, _))
# Target: parser.ml.depends, tags: { package(llvm), package(llvm.analysis), warn(+a-4), extension:ml, file:parser.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package llvm -package llvm.analysis -modules parser.ml > parser.ml.depends
# Target: parser.cmx, tags: { package(llvm), package(llvm.analysis), warn(+a-4), compile, extension:cmx, extension:ml, file:parser.cmx, file:parser.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -w +a-4 -package llvm -package llvm.analysis -o parser.cmx parser.ml
# Target: codegen.cmx, tags: { package(llvm), package(llvm.analysis), warn(+a-4), compile, extension:cmx, extension:ml, file:codegen.cmx, file:codegen.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -w +a-4 -package llvm -package llvm.analysis -o codegen.cmx codegen.ml
+ ocamlfind ocamlopt -c -w +a-4 -package llvm -package llvm.analysis -o codegen.cmx codegen.ml
File "codegen.ml", line 45, characters 21-276:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
Default
File "codegen.ml", line 333, characters 10-660:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(Void|Default|Gradient|Album|Array)
File "codegen.ml", line 277, characters 44-7782:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
SSetpval (_, _, _)
File "codegen.ml", line 482, characters 70-74:
Warning 40: Less was selected from type Ast.op.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 482, characters 70-74:
Warning 42: this use of Less relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 483, characters 95-98:
Warning 40: Add was selected from type Ast.op.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 483, characters 95-98:
Warning 42: this use of Add relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 489, characters 70-74:
Warning 40: Less was selected from type Ast.op.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 489, characters 70-74:
Warning 42: this use of Less relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 490, characters 95-98:
Warning 40: Add was selected from type Ast.op.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 490, characters 95-98:
Warning 42: this use of Add relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 479, characters 16-1194:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(Int|Bool|Float|Void|String|Default|Gradient|Array|Pixel)
File "codegen.ml", line 500, characters 64-68:
Warning 40: Less was selected from type Ast.op.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 500, characters 64-68:
Warning 42: this use of Less relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 501, characters 83-86:
Warning 40: Add was selected from type Ast.op.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 501, characters 83-86:
Warning 42: this use of Add relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 497, characters 16-407:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(Bool|Float|Void|String|Default|Image|Gradient|Album|Array|Pixel)
File "codegen.ml", line 31, characters 6-11:
Warning 26: unused variable i64_t.
# Target: scanner.cmx, tags: { package(llvm), package(llvm.analysis), warn(+a-4), compile, extension:cmx, extension:ml, file:scanner.cmx, file:scanner.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -w +a-4 -package llvm -package llvm.analysis -o scanner.cmx scanner.ml
# Target: semant.cmx, tags: { package(llvm), package(llvm.analysis), warn(+a-4), compile, extension:cmx, extension:ml, file:semant.cmx, file:semant.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -w +a-4 -package llvm -package llvm.analysis -o semant.cmx semant.ml
# Target: microc.cmx, tags: { package(llvm), package(llvm.analysis), warn(+a-4), compile, extension:cmx, extension:ml, file:microc.cmx, file:microc.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -w +a-4 -package llvm -package llvm.analysis -o microc.cmx microc.ml
# Target: microc.native, tags: { package(llvm), package(llvm.analysis), warn(+a-4), dont_link_with, extension:native, file:microc.native, link, native, ocaml, program, quiet, traverse }
ocamlfind ocamlopt -linkpkg -package llvm -package llvm.analysis ast.cmx sast.cmx codegen.cmx parser.cmx scanner.cmx semant.cmx microc.cmx -o microc.native
# Compilation successful.
